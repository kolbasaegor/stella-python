language core;
extend with #sum-types, #unit-type;

fn test(first : Bool) -> Nat + Unit {
  return
    match (inl(0)) {
      inl(x) => if first then inl(succ(0)) else inr(unit)
    | inr(y) => if first then inl(succ(0)) else inr(unit)
    }
}

fn main(input : Bool) -> Nat {
  return match test(input){
      inl(n) => n
    | inr(_) => 0
  }
}
